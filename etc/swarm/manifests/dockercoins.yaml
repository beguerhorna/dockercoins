# Creamos las redes
networks:
  hasher:
    internal: true
  redis:
    internal: true
  rng:
    internal: true
  webui:
    internal: true    
  worker:
    internal: true
#balanceadores (servicios)
services:
  hasher:
    deploy:
      mode: replicated
      placement:
        constraint:
          - node.role == worker
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
        reservations:
          cpus: "0.1"
          memory: 100M
    expose:
      - 8080
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 30s
      test: wget -q --spider localhost:8080
      timeout: 1S
    image: beguerhorna1/dockercoins:latest-hasher
    #1 proyecto por cada microservicio image: beguerhorna1/dockercoin-hasher:latest
    network:
      - hasher
  redis:
    deploy:
      mode: replicated
      placement:
        constraint:
          - node.role == worker
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
        reservations:
          cpus: "0.1"
          memory: 100M
    expose:
        - 6379
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 30s
      test: redis-cli
      timeout: 1S
    #Imagen oficial de Redis
    image: redis:6.0.9-alpine3.12@sha256:aa31e6d2afc72d2222ed3953587197c324f615861771637a64053f9d99ba4b74    
    network:
      - redis
    volumes:
      - redis:/data
  rng:
    deploy:
      #DaemonSet (se despliega una vez por worker)
      mode: global
      placement:
        constraint:
          - node.role == worker
      #replicas: 1 -- al ser demonio no lo podemos replicar
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
        reservations:
          cpus: "0.1"
          memory: 100M
    expose:
        - 8080
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 30s
      test: wget -q --spider localhost:8080
      timeout: 1S
    image: beguerhorna1/dockercoins:latest-rng
    network:
      - rng
  webui:
    deploy:
      mode: replicated
      placement:
        constraint:
          - node.role == worker
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
        reservations:
          cpus: "0.1"
          memory: 100M
    expose:
        - 8080
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 30s
      # aqui podemos poner el curl porque lo tenemos en la imagen
      # podemos comprobarlo en una terminal con docker run --rm XXX which curl
      test: curl -f localhost:8080
      timeout: 1S
    image: beguerhorna1/dockercoins:latest-webui
    network:
      #nos conectamos a redis asi que incluimos una interfaz directa
      - redis
      - webui    
  worker:
    deploy:
      mode: replicated
      placement:
        constraint:
          - node.role == worker
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
        reservations:
          cpus: "0.1"
          memory: 100M
    # No exponemos nada      
    #expose:
    #  - 8080
    healthcheck:
      interval: 10s
      retries: 3
      start_period: 30s
      test: netstat -nt | grep ESTABLISHED | grep -q 6379 
      timeout: 1S
    image: beguerhorna1/dockercoins:latest-worker
    network:
      - hasher
      - redis
      - rng
      - worker
version: '3.8'
volumes:
  redis:
  
